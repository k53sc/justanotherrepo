# include <iostream>
# include <vector>

bool find( int start, int end, int toFind, std::vector<int> & input )
{
  // check mid
  if( start > end )
    {
      return false;
    }

  if( end > input.size() -1 )
    {
      return false;
    }

  // find mid
  int mid = ( start + end )/2;  
  
  if( input[mid] == toFind )
    return true;

  if( toFind > input[mid] )
    {
      return find( mid + 1, end, toFind, input ); 
    }
  else
    {
      return find( start, mid, toFind, input );
    }
}

bool bSearch( int toFind, std::vector<int> & input )
{
  int start = 0;
  int end = input.size() -1;
  return find( start, end, toFind, input );
}

int main()
{
  std::vector<int> input;
  for( int i = 1; i < 5; i++ )
    {
      input.push_back( i );
    }
  while( 1 )
    {
      int toFind = 1;
      std::cin >> toFind;
      std::cout << bSearch( toFind, input ) << std::endl;
    }
  return 0;
}
